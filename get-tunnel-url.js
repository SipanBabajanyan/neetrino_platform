const https = require('https');

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É–Ω–Ω–µ–ª—è—Ö ngrok
https.get('http://localhost:4040/api/tunnels', (res) => {
  let data = '';
  
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    try {
      const tunnels = JSON.parse(data);
      const httpsTunnel = tunnels.tunnels.find(tunnel => tunnel.proto === 'https');
      
      if (httpsTunnel) {
        console.log('üåê –ü—É–±–ª–∏—á–Ω—ã–π URL:', httpsTunnel.public_url);
        console.log('üîó Import endpoint:', httpsTunnel.public_url + '/import/push');
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç URL –≤ –ø–ª–∞–≥–∏–Ω–µ WordPress');
      } else {
        console.log('‚ùå –¢—É–Ω–Ω–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω.');
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞:', error.message);
    }
  });
}).on('error', (error) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ngrok:', error.message);
  console.log('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ ngrok –∑–∞–ø—É—â–µ–Ω: ngrok http 3001');
});

