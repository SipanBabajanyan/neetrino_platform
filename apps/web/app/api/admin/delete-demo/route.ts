import { NextRequest, NextResponse } from 'next/server';
const { demoData } = require('../../../../lib/demo-data.js');

// DELETE - —É–¥–∞–ª–∏—Ç—å –¥–µ–º–æ
export async function DELETE(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const id = searchParams.get('id');
    
    if (!id) {
      return NextResponse.json(
        { success: false, error: 'ID parameter is required' },
        { status: 400 }
      );
    }
    
    console.log('üóëÔ∏è Delete Demo API: –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –¥–µ–º–æ —Å ID:', id);
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–µ–º–æ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    const demoToDelete = demoData.getById(id);
    if (!demoToDelete) {
      console.log('‚ùå Delete Demo API: –î–µ–º–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return NextResponse.json(
        { success: false, error: 'Demo not found' },
        { status: 404 }
      );
    }
    
    console.log('üóëÔ∏è Delete Demo API: –£–¥–∞–ª—è–µ–º –¥–µ–º–æ:', demoToDelete.title);
    
    // –£–¥–∞–ª—è–µ–º –¥–µ–º–æ
    const success = demoData.delete(id);
    
    if (!success) {
      console.log('‚ùå Delete Demo API: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏');
      return NextResponse.json(
        { success: false, error: 'Failed to delete demo' },
        { status: 500 }
      );
    }
    
    console.log('‚úÖ Delete Demo API: –î–µ–º–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ');
    
    return NextResponse.json({
      success: true,
      message: 'Demo deleted successfully',
      deletedDemo: demoToDelete,
      remainingCount: demoData.getAll().length
    });
  } catch (error) {
    console.error('üí• Delete Demo API: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:', error);
    return NextResponse.json(
      { success: false, error: 'Failed to delete demo' },
      { status: 500 }
    );
  }
}
